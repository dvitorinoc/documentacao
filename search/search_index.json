{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Receiv Docs Sum\u00e1rio Mecanismo de valida\u00e7\u00e3o de dados","title":"Receiv Docs"},{"location":"#receiv-docs","text":"","title":"Receiv Docs"},{"location":"#sumario","text":"Mecanismo de valida\u00e7\u00e3o de dados","title":"Sum\u00e1rio"},{"location":"ferramentas/motor_validacao/","text":"Mecanismo de valida\u00e7\u00e3o de dados Este validador foi inspirado no Validator utilizado pelo Laravel, mas sua implementa\u00e7\u00e3o foi adaptada para atender as necessidades dos processos do sistema Receiv. Sum\u00e1rio Validador de dados da Receiv Utiliza\u00e7\u00e3o Sintaxe das regras Customiza\u00e7\u00e3o de mensagens Regras de valida\u00e7\u00e3o Documenta\u00e7\u00e3o validate(array $dados, array $regras) fails() setMsg(string $campo, array $regras) getMessages() Utiliza\u00e7\u00e3o require_once vendor/autoload.php ; use BWCS\\Validator\\Validator; // Instancia\u00e7\u00e3o do validador $validator = new Validator(); // Executando a valida\u00e7\u00e3o $validator- validate($_POST, [ 'credor_id' = 'required|integer|exists:tb_credor,credor_id|stop', 'email' = 'required|email|unique:tb_usuario,e_mail|stop', 'password' = 'required|confirmed|min:8', 'data_inicial' = 'required|date_between:-30 days,-1 days' ]); // Obtendo o resultado da valida\u00e7\u00e3o e printando na tela if($validator- fails()) { print_r($validator- getMessages()); } Sintaxe das regras Um campo pode ter mais de uma regra, sendo separadas por um | (pipe) . Ex.: required|string|stop Quando uma regra receber parametros, dever\u00e3o vir ap\u00f3s um : e os par\u00e2metros dever\u00e3o ser separados por v\u00edgula. Ex.: required|integer|exists:tb_credor,credor_id Customiza\u00e7\u00e3o de mensagens A customiza\u00e7\u00e3o de mensagem de erro de valida\u00e7\u00e3o pode ser feita no m\u00e9todo setMsg podendo ser definidas mensagens espec\u00edficas para cada tipo de erro. Caso haja mais de uma regra mas seja definida uma mensage customizada para apenas uma, as outras regras retornar\u00e3o a mensagem de erro padr\u00e3o. Obs.: O m\u00e9todo setMsg deve ser chamado antes do m\u00e9todo validate . Ex.: $validator- setMsg('email', [ 'required' = 'O e-mail deve ser informado', 'email' = 'E-mail inv\u00e1lido', 'unique' = 'Este e-mail n\u00e3o est\u00e1 dispon\u00edvel para registro' ]); $validator- setMsg('nascimento', [ 'date_between' = 'O dependente deve ter entre 12 e 18 anos de idade' ]); $validator- validate($_POST, [ 'email' = 'required|email|unique:tb_usuario,e_mail|stop', 'nascimento' = 'required|date_between:-18 years,-12 years' ]); Regras de valida\u00e7\u00e3o Regra Descri\u00e7\u00e3o required O campo deve existir e ter algum valor n\u00e3o nulo. stop Interrompe a execu\u00e7\u00e3o das regras seguintes caso um campo n\u00e3o seja v\u00e1lido integer O campo deve ter um valor inteiro. numeric O campo deve ter um valor n\u00famerico. bool O campo deve um valor booleano. Os valores aceitos s\u00e3o true, false, 1, 0, \"1\", e \"0\". checked O campo deve ter um dos valores \"yes\", \"on\", true, \"true\", 1, \"1\". not_checked O campo pode ter um dos valores \"yes\", \"on\", true, \"true\", 1, \"1\". alpha Deve conter apenas caracteres alfab\u00e9ticos alpha_numeric Deve conter apenas caracteres alfab\u00e9ticos e num\u00e9ricos alpha_dash Deve conter apenas caracteres alfab\u00e9ticos, - (h\u00edfen) ou _ (underscore) email O campo deve ser um email v\u00e1lido confirmed O campo deve ter um campo de confirma\u00e7\u00e3o. O campo de confirma\u00e7\u00e3o deve ser o nome do campo principal seguido de _confirmation contains: string Valida se o valor do campo cont\u00e9m o uma string not_contains: string Valida se o valor do campo n\u00e3o cont\u00e9m o uma string json Valida se o valor fornecido \u00e9 um json v\u00e1lido url Valida se o valor fornecido \u00e9 uma url v\u00e1lida min: valor Se o valor do campo for num\u00e9rico verifica se um valor do campo \u00e9 maior ou igual o valor definido na regra. Se o valor do campo for uma string verifica se o compromento \u00e9 maior ou igual o valor definido na regra max: valor Se o valor do campo for num\u00e9rico verifica se um valor do campo \u00e9 menor ou igual o valor definido na regra. Se o valor do campo for uma string verifica se o compromento \u00e9 menor ou igual o valor definido na regra between: min,max Confere se o valor \u00e9 maior ou igual a min e menor e igual a max date Valida se o valor do campo \u00e9 uma data v\u00e1lida no formato AAAA-MM-DD date_format: formato Valida se o valor do campo \u00e9 uma data v\u00e1lida no formato definindo. Internamente utiliza a fun\u00e7\u00e3o strtotime do php ent\u00e3o deve seguir os formatos suportados before: data Confere se o valor do campo \u00e9 uma data anterior \u00e0 data definida na regra after: data Confere se o valor do campo \u00e9 uma data posterior \u00e0 data definida na regra date_between: min,max Valida se o valor do campo \u00e9 uma data v\u00e1lida e em um determinado per\u00edodo in: Sim,N\u00e3o,Talvez Valida se o valor do campo est\u00e1 em uma lista de valores informados na regra not_in: Sim,N\u00e3o,Talvez Valida se o valor do campo n\u00e3o est\u00e1 em uma lista de valores informados na regra exists: table,column Valida se o valor existe em uma coluna de uma tabela informados na regra. unique: table,column O valor deve ser \u00fanico na tabela/coluna informadas. Retorna inv\u00e1lido caso o valor do campo j\u00e1 exista. M\u00e9todos validate(array $dados, array $regras) Executa a valida\u00e7\u00e3o baseada em uma lista de regras passada para cada campo. dados ( array ): Lista de dados a serem validados com cada item no formato 'campo' = 'dados'; regras ( array ): Lista de regras de valida\u00e7\u00e3o seguindo o formato 'campo' = 'regras'; fails() Retorna true se a valida\u00e7\u00e3o ocorreu com algum erro. setMsg(string $campo, array $regras) Define mensagens customizadas para cada tipo de erro em um campo. campo ( array ): Campo ao qual a lista de mensagens ser\u00e1 aplicada. regras ( array ): Lista de de mensagens com cada item seguindo o formato 'regra' = 'Mensagem'; getMessages()","title":"Mecanismo de valida\u00e7\u00e3o de dados"},{"location":"ferramentas/motor_validacao/#mecanismo-de-validacao-de-dados","text":"Este validador foi inspirado no Validator utilizado pelo Laravel, mas sua implementa\u00e7\u00e3o foi adaptada para atender as necessidades dos processos do sistema Receiv.","title":"Mecanismo de valida\u00e7\u00e3o de dados"},{"location":"ferramentas/motor_validacao/#sumario","text":"Validador de dados da Receiv Utiliza\u00e7\u00e3o Sintaxe das regras Customiza\u00e7\u00e3o de mensagens Regras de valida\u00e7\u00e3o Documenta\u00e7\u00e3o validate(array $dados, array $regras) fails() setMsg(string $campo, array $regras) getMessages()","title":"Sum\u00e1rio"},{"location":"ferramentas/motor_validacao/#utilizacao","text":"require_once vendor/autoload.php ; use BWCS\\Validator\\Validator; // Instancia\u00e7\u00e3o do validador $validator = new Validator(); // Executando a valida\u00e7\u00e3o $validator- validate($_POST, [ 'credor_id' = 'required|integer|exists:tb_credor,credor_id|stop', 'email' = 'required|email|unique:tb_usuario,e_mail|stop', 'password' = 'required|confirmed|min:8', 'data_inicial' = 'required|date_between:-30 days,-1 days' ]); // Obtendo o resultado da valida\u00e7\u00e3o e printando na tela if($validator- fails()) { print_r($validator- getMessages()); }","title":"Utiliza\u00e7\u00e3o"},{"location":"ferramentas/motor_validacao/#sintaxe-das-regras","text":"Um campo pode ter mais de uma regra, sendo separadas por um | (pipe) . Ex.: required|string|stop Quando uma regra receber parametros, dever\u00e3o vir ap\u00f3s um : e os par\u00e2metros dever\u00e3o ser separados por v\u00edgula. Ex.: required|integer|exists:tb_credor,credor_id","title":"Sintaxe das regras"},{"location":"ferramentas/motor_validacao/#customizacao-de-mensagens","text":"A customiza\u00e7\u00e3o de mensagem de erro de valida\u00e7\u00e3o pode ser feita no m\u00e9todo setMsg podendo ser definidas mensagens espec\u00edficas para cada tipo de erro. Caso haja mais de uma regra mas seja definida uma mensage customizada para apenas uma, as outras regras retornar\u00e3o a mensagem de erro padr\u00e3o. Obs.: O m\u00e9todo setMsg deve ser chamado antes do m\u00e9todo validate . Ex.: $validator- setMsg('email', [ 'required' = 'O e-mail deve ser informado', 'email' = 'E-mail inv\u00e1lido', 'unique' = 'Este e-mail n\u00e3o est\u00e1 dispon\u00edvel para registro' ]); $validator- setMsg('nascimento', [ 'date_between' = 'O dependente deve ter entre 12 e 18 anos de idade' ]); $validator- validate($_POST, [ 'email' = 'required|email|unique:tb_usuario,e_mail|stop', 'nascimento' = 'required|date_between:-18 years,-12 years' ]);","title":"Customiza\u00e7\u00e3o de mensagens"},{"location":"ferramentas/motor_validacao/#regras-de-validacao","text":"Regra Descri\u00e7\u00e3o required O campo deve existir e ter algum valor n\u00e3o nulo. stop Interrompe a execu\u00e7\u00e3o das regras seguintes caso um campo n\u00e3o seja v\u00e1lido integer O campo deve ter um valor inteiro. numeric O campo deve ter um valor n\u00famerico. bool O campo deve um valor booleano. Os valores aceitos s\u00e3o true, false, 1, 0, \"1\", e \"0\". checked O campo deve ter um dos valores \"yes\", \"on\", true, \"true\", 1, \"1\". not_checked O campo pode ter um dos valores \"yes\", \"on\", true, \"true\", 1, \"1\". alpha Deve conter apenas caracteres alfab\u00e9ticos alpha_numeric Deve conter apenas caracteres alfab\u00e9ticos e num\u00e9ricos alpha_dash Deve conter apenas caracteres alfab\u00e9ticos, - (h\u00edfen) ou _ (underscore) email O campo deve ser um email v\u00e1lido confirmed O campo deve ter um campo de confirma\u00e7\u00e3o. O campo de confirma\u00e7\u00e3o deve ser o nome do campo principal seguido de _confirmation contains: string Valida se o valor do campo cont\u00e9m o uma string not_contains: string Valida se o valor do campo n\u00e3o cont\u00e9m o uma string json Valida se o valor fornecido \u00e9 um json v\u00e1lido url Valida se o valor fornecido \u00e9 uma url v\u00e1lida min: valor Se o valor do campo for num\u00e9rico verifica se um valor do campo \u00e9 maior ou igual o valor definido na regra. Se o valor do campo for uma string verifica se o compromento \u00e9 maior ou igual o valor definido na regra max: valor Se o valor do campo for num\u00e9rico verifica se um valor do campo \u00e9 menor ou igual o valor definido na regra. Se o valor do campo for uma string verifica se o compromento \u00e9 menor ou igual o valor definido na regra between: min,max Confere se o valor \u00e9 maior ou igual a min e menor e igual a max date Valida se o valor do campo \u00e9 uma data v\u00e1lida no formato AAAA-MM-DD date_format: formato Valida se o valor do campo \u00e9 uma data v\u00e1lida no formato definindo. Internamente utiliza a fun\u00e7\u00e3o strtotime do php ent\u00e3o deve seguir os formatos suportados before: data Confere se o valor do campo \u00e9 uma data anterior \u00e0 data definida na regra after: data Confere se o valor do campo \u00e9 uma data posterior \u00e0 data definida na regra date_between: min,max Valida se o valor do campo \u00e9 uma data v\u00e1lida e em um determinado per\u00edodo in: Sim,N\u00e3o,Talvez Valida se o valor do campo est\u00e1 em uma lista de valores informados na regra not_in: Sim,N\u00e3o,Talvez Valida se o valor do campo n\u00e3o est\u00e1 em uma lista de valores informados na regra exists: table,column Valida se o valor existe em uma coluna de uma tabela informados na regra. unique: table,column O valor deve ser \u00fanico na tabela/coluna informadas. Retorna inv\u00e1lido caso o valor do campo j\u00e1 exista.","title":"Regras de valida\u00e7\u00e3o"},{"location":"ferramentas/motor_validacao/#metodos","text":"","title":"M\u00e9todos"},{"location":"ferramentas/motor_validacao/#validatearray-dados-array-regras","text":"Executa a valida\u00e7\u00e3o baseada em uma lista de regras passada para cada campo. dados ( array ): Lista de dados a serem validados com cada item no formato 'campo' = 'dados'; regras ( array ): Lista de regras de valida\u00e7\u00e3o seguindo o formato 'campo' = 'regras';","title":"validate(array $dados, array $regras)"},{"location":"ferramentas/motor_validacao/#fails","text":"Retorna true se a valida\u00e7\u00e3o ocorreu com algum erro.","title":"fails()"},{"location":"ferramentas/motor_validacao/#setmsgstring-campo-array-regras","text":"Define mensagens customizadas para cada tipo de erro em um campo. campo ( array ): Campo ao qual a lista de mensagens ser\u00e1 aplicada. regras ( array ): Lista de de mensagens com cada item seguindo o formato 'regra' = 'Mensagem';","title":"setMsg(string $campo, array $regras)"},{"location":"ferramentas/motor_validacao/#getmessages","text":"","title":"getMessages()"}]}